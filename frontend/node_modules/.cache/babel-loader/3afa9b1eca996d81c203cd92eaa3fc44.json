{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP TH\\\\Desktop\\\\lost and found\\\\frontend\\\\src\\\\Components\\\\Lost_item.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport lodash from \"lodash\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\n\nfunction Lost_item() {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const {\n    addToast\n  } = useToasts();\n  const token = window.localStorage.getItem(\"token\");\n  const [itemname, setitemname] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [itemquestion, setitemquestion] = useState(\"\");\n  const [itemimage, setitemimage] = useState([]);\n  const [type, settype] = useState(\"\");\n  const [alertshow, setalertShow] = useState(true);\n\n  const handleShow = () => setShow(true);\n\n  const handleSubmit = () => {\n    // const form = new FormData();\n    // form.append(\"name\", itemname);\n    // form.append(\"description\", description);\n    // form.append('itemPictures',itemname)\n    // const payload = {\n    //   name: itemname,\n    //   description: description,\n    //   type:type,\n    //   itemPictures: itemimage,\n    // };\n    // console.log(payload)\n    if (itemname && description && type) {\n      console.log(\"Item image : \", itemimage);\n      const info = new FormData();\n      info.append(\"name\", itemname);\n      info.append(\"description\", description);\n      info.append(\"question\", itemquestion);\n      info.append(\"type\", type);\n      itemimage.map(itemImage => {\n        info.append(\"itemPictures\", itemImage, itemImage.name);\n      });\n      axios({\n        url: \"http://localhost:5000/postitem\",\n        method: \"POST\",\n        data: info,\n        headers: {\n          Authorization: token ? `Bearer ${token}` : \"\"\n        },\n        withCredentials: true,\n        onUploadProgress: ProgressEvent => {\n          console.log(\"Upload progress: \" + Math.round(ProgressEvent.loaded / ProgressEvent.total * 100) + \"%\");\n        } // url: \"http://localhost:5000/login\"\n\n      }).then(response => {\n        console.log(\"Response:\", response.data);\n        addToast(\"Wohoo ðŸ¤©! Item listed successfully.\", {\n          appearance: \"success\"\n        });\n        setitemname(\"\");\n        setdescription(\"\");\n        settype(\"\");\n        setitemquestion(\"\");\n        setitemimage([]);\n        setShow(false);\n      }).catch(err => {\n        console.log(err);\n        addToast(\"Oops ðŸ˜ž! Check internet connection or try again later.\", {\n          appearance: \"error\"\n        });\n      });\n    } else {\n      addToast(\"Did you missed any of the required fields ðŸ™„?\", {\n        appearance: \"error\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Post Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: () => setShow(false),\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Post item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Item name\", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter item\",\n              value: itemname,\n              onChange: e => setitemname(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Description\", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              placeholder: \"Enter Description\",\n              value: description,\n              onChange: e => setdescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Enter a question based on the item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Ex:- What is the color of the phone ?\",\n              value: itemquestion,\n              onChange: e => setitemquestion(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Item type\", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              required: true,\n              defaultValue: \"Choose...\",\n              onChange: e => settype(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Choose..\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Lost\",\n                children: \"Lost It\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Found\",\n                children: \"Found It\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: /*#__PURE__*/_jsxDEV(Form.File, {\n              type: \"file\",\n              id: \"formimage\",\n              label: \"Image input\",\n              onChange: e => {\n                // console.log(e.target.files)\n                let {\n                  files\n                } = e.target;\n                lodash.forEach(files, file => {\n                  console.log(file);\n                  setitemimage(item => [...item, file]);\n                });\n              },\n              multiple: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShow(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Lost_item, \"STA0kuS+gpJyEI6yuwIkJ6UeTaQ=\", false, function () {\n  return [useToasts];\n});\n\n_c = Lost_item;\nexport default Lost_item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lost_item\");","map":{"version":3,"sources":["C:/Users/HP TH/Desktop/lost and found/frontend/src/Components/Lost_item.js"],"names":["React","useState","axios","lodash","useToasts","Button","Modal","Form","Lost_item","show","setShow","addToast","token","window","localStorage","getItem","itemname","setitemname","description","setdescription","itemquestion","setitemquestion","itemimage","setitemimage","type","settype","alertshow","setalertShow","handleShow","handleSubmit","console","log","info","FormData","append","map","itemImage","name","url","method","data","headers","Authorization","withCredentials","onUploadProgress","ProgressEvent","Math","round","loaded","total","then","response","appearance","catch","err","color","e","target","value","files","forEach","file","item"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport lodash from \"lodash\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { Button, Modal, Form } from \"react-bootstrap\";\r\nfunction Lost_item() {\r\n  const [show, setShow] = useState(false);\r\n  const { addToast } = useToasts();\r\n  const token = window.localStorage.getItem(\"token\");\r\n\r\n  const [itemname, setitemname] = useState(\"\");\r\n  const [description, setdescription] = useState(\"\");\r\n  const [itemquestion, setitemquestion] = useState(\"\");\r\n  const [itemimage, setitemimage] = useState([]);\r\n  const [type, settype] = useState(\"\");\r\n  const [alertshow, setalertShow] = useState(true);\r\n\r\n  const handleShow = () => setShow(true);\r\n  const handleSubmit = () => {\r\n    // const form = new FormData();\r\n    // form.append(\"name\", itemname);\r\n    // form.append(\"description\", description);\r\n    // form.append('itemPictures',itemname)\r\n    // const payload = {\r\n    //   name: itemname,\r\n    //   description: description,\r\n    //   type:type,\r\n    //   itemPictures: itemimage,\r\n    // };\r\n    // console.log(payload)\r\n    if (itemname && description && type) {\r\n      console.log(\"Item image : \", itemimage);\r\n      const info = new FormData();\r\n      info.append(\"name\", itemname);\r\n      info.append(\"description\", description);\r\n      info.append(\"question\", itemquestion);\r\n      info.append(\"type\", type);\r\n      itemimage.map((itemImage) => {\r\n        info.append(\"itemPictures\", itemImage, itemImage.name);\r\n      });\r\n\r\n      axios({\r\n        url: \"http://localhost:5000/postitem\",\r\n        method: \"POST\",\r\n        data: info,\r\n        headers: {\r\n          Authorization: token ? `Bearer ${token}` : \"\",\r\n        },\r\n        withCredentials: true,\r\n        \r\n        onUploadProgress: (ProgressEvent) => {\r\n          console.log(\r\n            \"Upload progress: \" +\r\n              Math.round((ProgressEvent.loaded / ProgressEvent.total) * 100) +\r\n              \"%\"\r\n          );\r\n        },\r\n        // url: \"http://localhost:5000/login\"\r\n      })\r\n       .then((response) => {\r\n  console.log(\"Response:\", response.data);\r\n  addToast(\"Wohoo ðŸ¤©! Item listed successfully.\", { appearance: \"success\" });\r\n  setitemname(\"\");\r\n  setdescription(\"\");\r\n  settype(\"\");\r\n  setitemquestion(\"\");\r\n  setitemimage([]);\r\n  setShow(false);\r\n})\r\n        .catch((err) => {\r\n          console.log(err);\r\n          addToast(\"Oops ðŸ˜ž! Check internet connection or try again later.\", {\r\n            appearance: \"error\",\r\n          });\r\n        });\r\n    }\r\n    else{\r\n      addToast(\"Did you missed any of the required fields ðŸ™„?\", {\r\n        appearance: \"error\",\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Post Item\r\n      </Button>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={() => setShow(false)}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Post item</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Item name<span style={{color:\"red\"}}>*</span></Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter item\"\r\n                value={itemname}\r\n                onChange={(e) => setitemname(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Description<span style={{color:\"red\"}}>*</span></Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Enter Description\"\r\n                value={description}\r\n                onChange={(e) => setdescription(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Enter a question based on the item</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Ex:- What is the color of the phone ?\"\r\n                value={itemquestion}\r\n                onChange={(e) => setitemquestion(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Item type<span style={{color:\"red\"}}>*</span></Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                required={true}\r\n                defaultValue=\"Choose...\"\r\n                onChange={(e) => settype(e.target.value)}\r\n              >\r\n                <option>Choose..</option>\r\n                <option value={\"Lost\"}>Lost It</option>\r\n                <option value={\"Found\"}>Found It</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.File\r\n                type=\"file\"\r\n                id=\"formimage\"\r\n                label=\"Image input\"\r\n                onChange={(e) => {\r\n                  // console.log(e.target.files)\r\n                  let { files } = e.target;\r\n                  lodash.forEach(files, (file) => {\r\n                    console.log(file);\r\n                    setitemimage((item) => [...item, file]);\r\n                  });\r\n                }}\r\n                multiple\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShow(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSubmit}>\r\n            Submit\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Lost_item;\r\n"]},"metadata":{},"sourceType":"module"}